<UserControl
    x:Class="DijkstraVisualization.Views.VertexView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:misc="clr-namespace:DijkstraVisualization.Misc"
    xmlns:views="clr-namespace:DijkstraVisualization.Views"
    MouseEnter="OnMouseEnter"
    MouseLeave="OnMouseLeave">
    <Grid>
        <Canvas x:Name="VertexCanvas">
            <misc:PieMenu
                x:Name="VertexMenu"
                BorderBrush="Black"
                BorderThickness="1"
                Gap="0"
                InnerRadius="28"
                MenuSector="360"
                RotateText="True"
                Rotation="135"
                SectorGap="0"
                Visibility="Collapsed">
                <misc:PieMenuItem
                    x:Name="ConnectMenuOption"
                    Background="LimeGreen"
                    BorderBrush="Black"
                    BorderThickness="1"
                    Click="OnConnectClick"
                    Cursor="Hand"
                    FontWeight="SemiBold"
                    Header="Connect"
                    SubMenuSector="40" />

                <misc:PieMenuItem
                    x:Name="AlgorithmsMenu"
                    Background="DeepSkyBlue"
                    BorderBrush="Black"
                    BorderThickness="1"
                    Click="OnAlgorithmsClick"
                    Cursor="Hand"
                    FontWeight="SemiBold"
                    Header="Run"
                    SubMenuSector="200">
                    <misc:PieMenuItem
                        Background="DeepSkyBlue"
                        BorderBrush="Black"
                        BorderThickness="1"
                        Click="OnRunDijkstraClick"
                        Cursor="Hand"
                        FontWeight="SemiBold"
                        Header="Dijkstra" />
                    <misc:PieMenuItem
                        Background="DeepSkyBlue"
                        BorderBrush="Black"
                        BorderThickness="1"
                        Cursor="Hand"
                        FontWeight="SemiBold"
                        Header="DFS" />
                    <misc:PieMenuItem
                        Background="DeepSkyBlue"
                        BorderBrush="Black"
                        BorderThickness="1"
                        Cursor="Hand"
                        FontWeight="SemiBold"
                        Header="BFS" />
                </misc:PieMenuItem>

                <misc:PieMenuItem
                    x:Name="DeleteMenuOption"
                    Background="Crimson"
                    BorderBrush="Black"
                    BorderThickness="1"
                    Click="OnDeleteClick"
                    Cursor="Hand"
                    FontWeight="SemiBold"
                    Header="Delete"
                    SubMenuSector="20" />

                <misc:PieMenuItem
                    x:Name="OtherMenuOption"
                    Background="Khaki"
                    BorderBrush="Black"
                    BorderThickness="1"
                    Cursor="Hand"
                    FontWeight="SemiBold"
                    Header="Other"
                    ReverseRotation="True"
                    SubMenuSector="200">
                    <misc:PieMenuItem
                        Background="Khaki"
                        BorderBrush="Black"
                        BorderThickness="1"
                        Cursor="Hand"
                        FontWeight="SemiBold"
                        Header="Disconnect"
                        ReverseRotation="True" />
                    <misc:PieMenuItem
                        Background="Khaki"
                        BorderBrush="Black"
                        BorderThickness="1"
                        Cursor="Hand"
                        FontWeight="SemiBold"
                        Header="Move"
                        ReverseRotation="True" />
                    <misc:PieMenuItem
                        Background="Khaki"
                        BorderBrush="Black"
                        BorderThickness="1"
                        Cursor="Hand"
                        FontWeight="SemiBold"
                        Header="Rename"
                        ReverseRotation="True" />

                </misc:PieMenuItem>

                <misc:PieMenu.LayoutTransform>
                    <ScaleTransform ScaleX="0.17" ScaleY="0.17" />
                </misc:PieMenu.LayoutTransform>
                <misc:PieMenu.RenderTransform>
                    <TranslateTransform X="-7.2" Y="-7.2" />
                </misc:PieMenu.RenderTransform>
            </misc:PieMenu>
        </Canvas>
        <Ellipse
            x:Name="VertexEllipse"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            PreviewMouseDown="OnMouseDown">
            <Ellipse.Style>
                <Style TargetType="{x:Type Ellipse}">
                    <Setter Property="Fill" Value="White" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsConnector, RelativeSource={RelativeSource AncestorType={x:Type views:VertexView}}}" Value="True">
                            <Setter Property="Stroke" Value="LimeGreen" />
                            <Setter Property="StrokeThickness" Value="0.45" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsConnector, RelativeSource={RelativeSource AncestorType={x:Type views:VertexView}}}" Value="False">
                            <Setter Property="Stroke" Value="Black" />
                            <Setter Property="StrokeThickness" Value="0.35" />
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsConnector, RelativeSource={RelativeSource AncestorType={x:Type views:VertexView}}}" Value="False" />
                                <Condition Binding="{Binding HasConnector, RelativeSource={RelativeSource AncestorType={x:Type views:VertexView}}}" Value="True" />
                                <Condition Binding="{Binding IsHovered, RelativeSource={RelativeSource AncestorType={x:Type views:VertexView}}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Stroke" Value="LimeGreen" />
                                <Setter Property="StrokeThickness" Value="0.6" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsConnector, RelativeSource={RelativeSource AncestorType={x:Type views:VertexView}}}" Value="True" />
                                <Condition Binding="{Binding HasConnector, RelativeSource={RelativeSource AncestorType={x:Type views:VertexView}}}" Value="True" />
                                <Condition Binding="{Binding IsHovered, RelativeSource={RelativeSource AncestorType={x:Type views:VertexView}}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Stroke" Value="LimeGreen" />
                                <Setter Property="Fill" Value="LimeGreen" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding IsSubject, RelativeSource={RelativeSource AncestorType={x:Type views:VertexView}}}" Value="True">
                            <Setter Property="Fill" Value="Lime" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsVisited, RelativeSource={RelativeSource AncestorType={x:Type views:VertexView}}}" Value="True">
                            <Setter Property="Fill" Value="DeepSkyBlue" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsVisiting, RelativeSource={RelativeSource AncestorType={x:Type views:VertexView}}}" Value="True">
                            <Setter Property="Fill" Value="Lime" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsSource, RelativeSource={RelativeSource AncestorType={x:Type views:VertexView}}}" Value="True">
                            <Setter Property="Fill" Value="Khaki" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsMarked, RelativeSource={RelativeSource AncestorType={x:Type views:VertexView}}}" Value="True">
                            <!--<Setter Property="Fill" Value="Yellow" />-->
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Ellipse.Style>
        </Ellipse>
        <TextBlock
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Background="Transparent"
            IsHitTestVisible="False">
            <TextBlock.Style>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="Text" Value="{Binding Id}" />
                    <Setter Property="FontSize" Value="3" />
                    <Setter Property="Foreground" Value="Black" />
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsConnector, RelativeSource={RelativeSource AncestorType={x:Type views:VertexView}}}" Value="True" />
                                <Condition Binding="{Binding HasConnector, RelativeSource={RelativeSource AncestorType={x:Type views:VertexView}}}" Value="True" />
                                <Condition Binding="{Binding IsHovered, RelativeSource={RelativeSource AncestorType={x:Type views:VertexView}}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Text" Value="x" />
                                <Setter Property="FontSize" Value="5" />
                                <Setter Property="Foreground" Value="White" />
                                <Setter Property="FontWeight" Value="SemiBold" />
                                <Setter Property="Margin" Value="0,-1.5,0,0" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding IsVisited, RelativeSource={RelativeSource AncestorType={x:Type views:VertexView}}}" Value="True">
                            <Setter Property="Foreground" Value="Black" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsSource, RelativeSource={RelativeSource AncestorType={x:Type views:VertexView}}}" Value="True">
                            <Setter Property="FontWeight" Value="SemiBold" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsMarked, RelativeSource={RelativeSource AncestorType={x:Type views:VertexView}}}" Value="True">
                            <Setter Property="FontWeight" Value="SemiBold" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
    </Grid>
</UserControl>
